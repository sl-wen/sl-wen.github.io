<?xml version="1.0" encoding="UTF-8"?>
                     <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
                        <channel>
                            <title>slwen blog</title>
                            <link>http://121.40.215.235</link>
                            <description>鱼鱼的博客</description>
                            <language>zh-cn</language>
                            <generator>Node+Supabase RSS自生成</generator>
                            <lastBuildDate>Fri, 06 Jun 2025 06:05:03 GMT</lastBuildDate>
                                
        <item>
            <title><![CDATA[阿里云]]></title>
            <link>http://121.40.215.235/pages/article.html?id=0df38f6b-760b-449f-88bf-1b5d6ebeb95e</link>
            <description><![CDATA[<pre><code>ssh root@121.40.215.235
</code></pre>
<pre><code>cd /usr/share/nginx/html/
git log
git add .
git commit -a -m &quot;webpack&quot;
git remote set-url origin git@github.com:sl-wen/sl-wen.github.io.git
git push
</code></pre>
]]></description>
            <author>slwen</author>
            <category>ali</category>
            <pubDate>Wed, 04 Jun 2025 09:24:26 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=0df38f6b-760b-449f-88bf-1b5d6ebeb95e</guid>
            <lastBuildDate>Fri, 06 Jun 2025 03:28:46 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[feed]]></title>
            <link>http://121.40.215.235/pages/article.html?id=384236e7-b4f0-45bb-ba67-3beae150f3e3</link>
            <description><![CDATA[<p>This message is used to verify that this feed (feedId:147823966754130944) belongs to me (userId:76466871819188224). Join me in enjoying the next generation information browser <a href="https://follow.is">https://follow.is</a>.</p>
]]></description>
            <author>slwen</author>
            
            <pubDate>Wed, 04 Jun 2025 03:03:41 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=384236e7-b4f0-45bb-ba67-3beae150f3e3</guid>
            <lastBuildDate>Wed, 04 Jun 2025 07:02:08 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[糖果屋]]></title>
            <link>http://121.40.215.235/pages/article.html?id=81e8730c-6150-46a0-8c34-62b635823fde</link>
            <description><![CDATA[<p><a href="https://akilar.top/">https://akilar.top/</a></p>
]]></description>
            <author>Admin</author>
            
            <pubDate>Wed, 21 May 2025 15:59:37 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=81e8730c-6150-46a0-8c34-62b635823fde</guid>
            <lastBuildDate>Mon, 02 Jun 2025 14:52:52 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[feed]]></title>
            <link>http://121.40.215.235/pages/article.html?id=d7062406-00fb-4be4-9c95-cc8c4b01228e</link>
            <description><![CDATA[<p>feedid:147823966754130944+userId:76466871819188224</p>
]]></description>
            <author>Admin</author>
            
            <pubDate>Wed, 21 May 2025 06:15:49 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=d7062406-00fb-4be4-9c95-cc8c4b01228e</guid>
            <lastBuildDate>Sun, 01 Jun 2025 03:46:05 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[负载]]></title>
            <link>http://121.40.215.235/pages/article.html?id=2db1fd10-661b-4718-bda1-c293da163f04</link>
            <description><![CDATA[<p><a href="http://121.40.215.235/">http://121.40.215.235/</a></p>
]]></description>
            <author>Admin</author>
            <category>服务器</category>
            <pubDate>Sun, 18 May 2025 13:11:27 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=2db1fd10-661b-4718-bda1-c293da163f04</guid>
            <lastBuildDate>Thu, 05 Jun 2025 07:37:53 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[每日摘要]]></title>
            <link>http://121.40.215.235/pages/article.html?id=91ebc7f9-3486-4f94-9c02-2d457fb9237c</link>
            <description><![CDATA[<pre><code>除去睡眠，人的一生有一万多天。但是人与人之间的区别就在于，你究竟是活了一万多天，还是仅仅活了一天，却重复了一万多次。
</code></pre>
]]></description>
            <author>slwen</author>
            <category>摘要</category>
            <pubDate>Wed, 14 May 2025 06:02:57 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=91ebc7f9-3486-4f94-9c02-2d457fb9237c</guid>
            <lastBuildDate>Wed, 04 Jun 2025 02:34:27 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[bat]]></title>
            <link>http://121.40.215.235/pages/article.html?id=d5791554-2c7d-460b-bb2d-18c1c8c4482a</link>
            <description><![CDATA[<h1>bat命令入门与高级技巧详解</h1>
<p>这里为您介绍一下基础的bat命令知道及详细的bat命令使用方法，让我们使用bat命令解决windows当中一些需要手动操作的问题</p>
<h2>第一章 批处理基础</h2>
<h3>第一节 常用批处理内部命令简介</h3>
<p>批处理定义：顾名思义，批处理文件是将一系列命令按一定的顺序集合为一个可执行的文本文件，其扩展名为BAT或者CMD。这些命令统称批处理命令。</p>
<p>小知识：可以在键盘上按下Ctrl+C组合键来强行终止一个批处理的执行过程。
了解了大概意思后,我们正式开始学习.先看一个简单的例子!</p>
<pre><code>@echo off
echo &quot;欢迎来到脚本之家!&quot;
pause
</code></pre>
<p>把上面的3条命令保存为文件test.bat或者test.cmd然后执行就会在屏幕上显示以下二行话:</p>
<pre><code>欢迎来到非常脚本之家!
请按任意键继续. . .
</code></pre>
<p>这就是一个简单批处理文件了，这个批处理文件一共就用了2条命令 &quot;echo&quot; 和&quot;pause&quot; 还有一个特殊符号&quot;@&quot;,从上面这个简单的批处理中,我们可以发现其实批处理就是运用一些含有特殊意义的符号和一些完成指定功能的命令组合而成,那么在批处理中有多少这样的特殊符号和功能命令呢？我们现在就来仔细了解一下一些最常用的!</p>
<p>批处理的常见命令（未列举的命令还比较多）</p>
<pre><code>1、REM 和 ::
2、ECHO 和 @
3、PAUSE
4、ERRORLEVEL
5、TITLE
6、COLOR
7、mode 配置系统设备
8、GOTO 和 :
9、FIND
10、START
11、assoc 和 ftype
12、pushd 和 popd
13、CALL
14、shift
15、IF
16、setlocal 与 变量延迟
17、ATTRIB显示或更改文件属性
</code></pre>
<p>介绍命令</p>
<h4>1、REM 和 ::</h4>
<blockquote>
<p>REM为注释命令，一般用来给程序加上注解，该命令后的内容不被执行，但能回显。其次, :: 也可以起到rem 的注释作用, 而且更简洁有效; 但有两点需要注意：
第一, 任何以冒号:开头的字符行, 在批处理中都被视作标号, 而直接忽略其后的所有内容。
有效标号：冒号后紧跟一个以字母数字开头的字符串，goto语句可以识别。
无效标号：冒号后紧跟一个非字母数字的一个特殊符号，goto无法识别的标号，可以起到注释作用，所以 :: 常被用作注释符号，其实 :+ 也可起注释作用。
第二, 与rem 不同的是, ::后的字符行在执行时不会回显, 无论是否用echo on打开命令行回显状态, 因为命令解释器不认为他是一个有效的命令行, 就此点来看, rem 在某些场合下将比 :: 更为适用; 另外, rem 可以用于 config.sys 文件中。
行内注释格式：%注释内容%（不常用，慎用）</p>
</blockquote>
<h4>2、ECHO 和 @</h4>
<p>@字符放在命令前将关闭该命令回显，无论此时echo是否为打开状态。
echo命令的作用列举如下：</p>
<h5>（1）打开回显或关闭回显功能</h5>
<pre><code>echo [{ on|off }]
</code></pre>
<p>如果想关闭“ECHO OFF”命令行自身的显示，则需要在该命令行前加上“@”。</p>
<h5>（2）显示当前ECHO设置状态</h5>
<pre><code>echo
</code></pre>
<h5>（3）输出提示信息</h5>
<pre><code>ECHO 信息内容
</code></pre>
<p>上述是ECHO命令常见的三种用法，也是大家熟悉和会用的，但作为DOS命令淘金者你还应该知道下面的技巧：</p>
<h5>（4）关闭DOS命令提示符</h5>
<p>在DOS提示符状态下键入ECHO OFF，能够关闭DOS提示符的显示使屏幕只留下光标，直至键入ECHO ON，提示符才会重新出现。</p>
<h5>（5）输出空行，即相当于输入一个回车</h5>
<pre><code>ECHO．
</code></pre>
<p>值得注意的是命令行中的“．”要紧跟在ECHO后面中间不能有空格，否则“．”将被当作提示信息输出到屏幕。另外“．”可以用，：；”／[\]＋等任一符号替代。
命令ECHO．输出的回车，经DOS管道转向可以作为其它命令的输入，比如echo.|time即相当于在TIME命令执行后给出一个回车。所以执行时系统会在显示当前时间后，自动返回到DOS提示符状态</p>
<h5>（6）答复命令中的提问</h5>
<pre><code>ECHO 答复语|命令文件名
</code></pre>
<p>上述格式可以用于简化一些需要人机对话的命令（如：CHKDSK／F；FORMAT Drive:；del <em>.</em>）的操作，它是通过DOS管道命令把ECHO命令输出的预置答复语作为人机对话命令的输入。下面的例子就相当于在调用的命令出现人机对话时输入“Y”回车：</p>
<pre><code>C:&gt;ECHO Y|CHKDSK/F
C:&gt;ECHO Y|DEL A :*.*
</code></pre>
<h5>（7）建立新文件或增加文件内容</h5>
<p>格式：ECHO 文件内容&gt;文件名</p>
<pre><code>ECHO 文件内容&gt;&gt;文件名
</code></pre>
<p>例如：
C:&gt;ECHO @ECHO OFF&gt;AUTOEXEC.BAT建立自动批处理文件
C:&gt;ECHO C:\CPAV\BOOTSAFE&gt;&gt;AUTOEXEC.BAT向自动批处理文件中追加内容
C:&gt;TYPE AUTOEXEC.BAT显示该自动批处理文件
@ECHO OFF
C:\CPAV\BOOTSAFE</p>
<h5>（8）向打印机输出打印内容或打印控制码</h5>
<p>格式：ECHO 打印机控制码&gt;RN
ECHO 打印内容&gt;RN
下面的例子是向M－1724打印机输入打印控制码。＜Alt＞156是按住Alt键在小键盘键入156，类似情况依此类推：
C:&gt;ECHO +156+42+116&gt;RN（输入下划线命令FS＊t）
C:&gt;ECHO [email=+155@]+155@&gt;RN[/email]（输入初始化命令ESC@）
C:&gt;ECHO.&gt;RN（换行）</p>
<h5>（9）使喇叭鸣响</h5>
<p>C:&gt;ECHO ^G
“^G”是在dos窗口中用Ctrl＋G或Alt＋007输入，输入多个^G可以产生多声鸣响。使用方法是直接将其加入批处理文件中或做成批处理文件调用。
这里的“^G”属于特殊符号的使用，请看本文后面的章节</p>
<h4>3、PAUSE</h4>
<p>PAUSE，玩游戏的人都知道，暂停的意思
在这里就是停止系统命令的执行并显示下面的内容。
例：
PAUSE
运行显示：
请按任意键继续. . .
要显示其他提示语，可以这样用：
Echo 其他提示语 pause &gt; nul</p>
<p>4、errorlevel
程序返回码
echo %errorlevel%
每个命令运行结束，可以用这个命令行格式查看返回码
用于判断刚才的命令是否执行成功
默认值为0，一般命令执行出错会设 errorlevel 为1</p>
<p>5、title
设置cmd窗口的标题
title 新标题#可以看到cmd窗口的标题栏变了</p>
<p>6、COLOR
设置默认的控制台前景和背景颜色。
COLOR [attr]
attr指定控制台输出的颜色属性
颜色属性由两个十六进制数字指定 -- 第一个为背景，第二个则为
前景。每个数字可以为以下任何值之一:
0 = 黑色 8 = 灰色
1 = 蓝色 9 = 淡蓝色
2 = 绿色 A = 淡绿色
3 = 湖蓝色 B = 淡浅绿色
4 = 红色 C = 淡红色
5 = 紫色 D = 淡紫色
6 = ** E = 淡**
7 = 白色 F = 亮白色
如果没有给定任何参数，该命令会将颜色还原到 CMD.EXE 启动时
的颜色。这个值来自当前控制台窗口、/T 开关或
DefaultColor 注册表值。
如果用相同的前景和背景颜色来执行 COLOR 命令，COLOR 命令
会将 ERRORLEVEL 设置为 1。
例如: &quot;COLOR fc&quot; 在亮白色上产生亮红色</p>
<p>7、mode 配置系统设备
配置系统设备。
串行口:　　　 MODE COMm[:] [BAUD=b] [PARITY=p] [DATA=d] [STOP=s]
[to=on|off] [xon=on|off] [odsr=on|off]
[octs=on|off] [dtr=on|off|hs]
[rts=on|off|hs|tg] [idsr=on|off]
设备状态: MODE [device] [/STATUS]
打印重定向:　　 MODE LPTn[:]=COMm[:]
选定代码页:　　 MODE CON[:] CP SELECT=yyy
代码页状态:　　 MODE CON[:] CP [/STATUS]
显示模式:　　 MODE CON[:] [COLS=c] [LINES=n]
击键率:　 MODE CON[:] [RATE=r DELAY=d]
例：
mode con cols=113 lines=15 color 9f
此命令设置DOS窗口大小：15行，113列</p>
<p>8、GOTO 和 :
GOTO会点编程的朋友就会知道这是跳转的意思。
在批处理中允许以“:XXX”来构建一个标号，然后用GOTO XXX跳转到标号:XXX处，然后执行标号后的命令。
例：</p>
<p>if {%1}=={} goto noparms
if &quot;%2&quot;==&quot;&quot; goto noparms</p>
<p>标签的名字可以随便起，但是最好是有意义的字符串啦，前加个冒号用来表示这个字符串是标签，goto命令就是根据这个冒号（:）来寻找下一步跳到到那里。最好有一些说明这样你别人看起来才会理解你的意图啊。</p>
<p>例：</p>
<p>1
2
3
4
5
6
@echo off
:start
set /a var+=1
echo %var%
if %var% leq 3 GOTO start
pause</p>
<p>运行显示：
1
2
3
4</p>
<p>9、find
在文件中搜索字符串。
FIND [/V] [/C] [/N] [/OFF[LINE]] &quot;string&quot; [[drive:][path]filename[ ...]]
/V显示所有未包含指定字符串的行。
/C仅显示包含字符串的行数。
/N显示行号。
/I搜索字符串时忽略大小写。
/OFF[LINE] 不要跳过具有脱机属性集的文件。
&quot;string&quot;指定要搜索的文字串，
[drive:][path]filename
指定要搜索的文件。
如果没有指定路径，FIND 将搜索键入的或者由另一命令产生的文字。
Find常和type命令结合使用
Type [drive:][path]filename | find &quot;string&quot; [&gt;tmpfile] #挑选包含string的行
Type [drive:][path]filename | find /v &quot;string&quot; #剔除文件中包含string的行
Type [drive:][path]filename | find /c #显示文件行数
以上用法将去除find命令自带的提示语（文件名提示）</p>
<p>例：</p>
<p>1
2
3
4
5
6
@echo off
echo 111 &gt;test.txt
echo 222 &gt;&gt;test.txt
find &quot;111&quot; test.txt
del test.txt
pause</p>
<p>运行显示如下：
---------- TEST.TXT
111
请按任意键继续. . .</p>
<p>例：</p>
<p>1
2
3
4
5
6
@echo off
echo 111 &gt;test.txt
echo 222 &gt;&gt;test.txt
type test.txt|find &quot;111&quot;
del test.txt
pause</p>
<p>运行显示如下：
111
请按任意键继续. . .</p>
<p>10、start 命令
批处理中调用外部程序的命令（该外部程序在新窗口中运行，批处理程序继续往下执行，不理会外部程序的运行状况），如果直接运行外部程序则必须等外部程序完成后才继续执行剩下的指令
例：start explorer d:\
调用图形界面打开D盘</p>
<p>11、assoc 和 ftype
文件关联
assoc 设置#39;文件扩展名&#39;关联，关联到&#39;文件类型&#39;
ftype 设置#39;文件类型&#39;关联，关联到&#39;执行程序和参数&#39;
当你双击一个.txt文件时，windows并不是根据.txt直接判断用 notepad.exe 打开
而是先判断.txt属于 txtfile #39;文件类型&#39;
再调用 txtfile 关联的命令行 txtfile=%SystemRoot%\system32\NOTEPAD.EXE %1
可以在&quot;文件夹选项&quot;→&quot;文件类型&quot;里修改这2种关联
assoc #显示所有#39;文件扩展名&#39;关联
assoc .txt#显示.txt代表的#39;文件类型&#39;，结果显示 .txt=txtfile
assoc .doc#显示.doc代表的#39;文件类型&#39;，结果显示 .doc=Word.Document.8
assoc .exe#显示.exe代表的#39;文件类型&#39;，结果显示 .exe=exefile
ftype #显示所有#39;文件类型&#39;关联
ftype exefile #显示exefile类型关联的命令行，结果显示 exefile=&quot;%1&quot; %*
assoc .txt=Word.Document.8
设置.txt为word类型的文档，可以看到.txt文件的图标都变了
assoc .txt=txtfile
恢复.txt的正确关联</p>
<p>ftype exefile=&quot;%1&quot; %*
恢复 exefile 的正确关联
如果该关联已经被破坏，可以运行 command.com ，再输入这条命令</p>
<p>12、pushd 和 popd
切换当前目录</p>
<p>1
2
3
4
5
6
@echo off
c: cd\ &amp; md mp3 #在 C:\ 建立 mp3 文件夹
md d:\mp4 #在 D:\ 建立 mp4 文件夹
cd /d d:\mp4#更改当前目录为 d:\mp4
pushd c:\mp3#保存当前目录，并切换当前目录为 c:\mp3
popd#恢复当前目录为刚才保存的 d:\mp4</p>
<p>一般用处不大，在当前目录名不确定时，会有点帮助。（dos编程中很有用）</p>
<p>13、CALL
CALL命令可以在批处理执行过程中调用另一个批处理，当另一个批处理执行完后，再继续执行原来的批处理
CALL command
调用一条批处理命令，和直接执行命令效果一样，特殊情况下很有用，比如变量的多级嵌套，见教程后面。在批处理编程中，可以根据一定条件生成命令字符串，用call可以执行该字符串，见例子。
CALL [drive:][path]filename [batch-parameters]
调用的其它批处理程序。filename 参数必须具有 .bat 或 .cmd 扩展名。
CALL :label arguments
调用本文件内命令段，相当于子程序。被调用的命令段以标签:label开头
以命令goto :eof结尾。</p>
<p>另外，批脚本文本参数参照(%0、%1、等等)已如下改变:</p>
<p>批脚本里的 %* 指出所有的参数(如 %1 %2 %3 %4 %5 ...)
批参数(%n)的替代已被增强。您可以使用以下语法:（看不明白的直接运行后面的例子）
%<del>1 - 删除引号(&quot;)，扩充 %1
%</del>f1- 将 %1 扩充到一个完全合格的路径名
%<del>d1- 仅将 %1 扩充到一个驱动器号
%</del>p1- 仅将 %1 扩充到一个路径
%<del>n1- 仅将 %1 扩充到一个文件名
%</del>x1- 仅将 %1 扩充到一个文件扩展名
%<del>s1- 扩充的路径指含有短名
%</del>a1- 将 %1 扩充到文件属性
%<del>t1- 将 %1 扩充到文件的日期/时间
%</del>z1- 将 %1 扩充到文件的大小
%~
P
A
T
H
:
1
−
查
找
列
在
P
A
T
H
环
境
变
量
的
目
录
，
并
将
扩
充
到
找
到
的
第
一
个
完
全
合
格
的
名
称
。
如
果
环
境
变
量
名
未
被
定
义
，
或
者
没
有
找
到
文
件
，
此
组
合
键
会
扩
充
到
空
字
符
串
可
以
组
合
修
定
符
来
取
得
多
重
结
果
:
PATH:1 - 在列在 PATH 环境变量中的目录里查找 %1，
并扩展到找到的第一个文件的驱动器号和路径。
%<del>ftza1 - 将 %1 扩展到类似 DIR 的输出行。
在上面的例子中，%1 和 PATH 可以被其他有效数值替换。
%</del> 语法被一个有效参数号码终止。%~ 修定符不能跟 %*使用
注意：参数扩充时不理会参数所代表的文件是否真实存在，均以当前目录进行扩展
要理解上面的知识，下面的例子很关键。</p>
<p>例：</p>
<p>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
@echo off
Echo 产生一个临时文件 &gt; tmp.txt
Rem 下行先保存当前目录，再将c:\windows设为当前目录
pushd c:\windows
Call :sub tmp.txt
Rem 下行恢复前次的当前目录
Popd
Call :sub tmp.txt
pause
Del tmp.txt
exit
:sub
Echo 删除引号： %<del>1
Echo 扩充到路径： %</del>f1
Echo 扩充到一个驱动器号： %<del>d1
Echo 扩充到一个路径： %</del>p1
Echo 扩充到一个文件名： %<del>n1
Echo 扩充到一个文件扩展名： %</del>x1
Echo 扩充的路径指含有短名： %<del>s1
Echo 扩充到文件属性： %</del>a1
Echo 扩充到文件的日期/时间： %<del>t1
Echo 扩充到文件的大小： %</del>z1
Echo 扩展到驱动器号和路径：%<del>dp1
Echo 扩展到文件名和扩展名：%</del>nx1
Echo 扩展到类似 DIR 的输出行：%~ftza1
Echo.
Goto :eof</p>
<p>例：</p>
<p>set aa=123456
set cmdstr=echo %aa%
call %cmdstr%
pause</p>
<p>本例中如果不用call，而直接运行%cmdstr%，将显示结果%aa%，而不是123456</p>
<p>14、shift
更改批处理文件中可替换参数的位置。
SHIFT [/n]
如果命令扩展名被启用，SHIFT 命令支持/n 命令行开关；该命令行开关告诉
命令从第 n 个参数开始移位；n 介于零和八之间。例如:
SHIFT /2
会将 %3 移位到 %2，将 %4 移位到 %3，等等；并且不影响 %0 和 %1。</p>
<p>15、IF
IF 条件判断语句，语法格式如下：
IF [NOT] ERRORLEVEL number command
IF [NOT] string1==string2 command
IF [NOT] EXIST filename command
下面逐一介绍，更详细的分析请看后面章节。</p>
<p>(1) IF [NOT] ERRORLEVEL number command
IF ERRORLEVEL这个句子必须放在某一个命令的后面，执行命令后由IF ERRORLEVEL 来判断命令的返回值。
Number的数字取值范围0~255，判断时值的排列顺序应该由大到小。返回的值大于等于指定的值时，条件成立
例：</p>
<p>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
@echo off
dir c:
rem退出代码为&gt;=1就跳至标题1处执行，&gt;=0就跳至标题0处执行
IF ERRORLEVEL 1 goto 1
IF ERRORLEVEL 0 goto 0
Rem 上面的两行不可交换位置，否则失败了也显示成功。
:0
echo 命令执行成功！
Rem 程序执行完毕跳至标题exit处退出
goto exit
:1
echo 命令执行失败！
Rem 程序执行完毕跳至标题exit处退出
goto exit
:exit
pause</p>
<p>运行显示：命令执行成功！
(2) IF [NOT] string1==string2 command
string1和string2都为字符的数据，英文内字符的大小写将看作不同，这个条件中的等于号必须是两个（绝对相等的意思）
条件相等后即执行后面的command
检测当前变量的值做出判断，为了防止字符串中含有空格，可用以下格式
if [NOT] {string1}=={string2} command
if [NOT] [string1]==[string2] command
if [NOT] &quot;string1&quot;==&quot;string2&quot; command
这种写法实际上将括号或引号当成字符串的一部分了，只要等号左右两边一致就行了，比如下面的写法就不行：
if {string1}==[string2] command</p>
<p>(3) IF [NOT] EXIST filename command
EXIST filename为文件或目录存在的意思
echo off
IF EXIST autoexec.bat echo 文件存在！
IF not EXIST autoexec.bat echo 文件不存在！
这个批处理大家可以放在C盘和D盘分别执行，看看效果</p>
<p>16、setlocal 与 变量延迟
本条内容引用[英雄出品]的批处理教程：
要想进阶，变量延迟是必过的一关！所以这一部分希望你能认真看。
为了更好的说明问题，我们先引入一个例子。
例1:</p>
<p>1
2
3
4
@echo off
set a=4
set a=5 echo %a%
pause</p>
<p>结果：4
解说：为什么是4而不是5呢？在echo之前明明已经把变量a的值改成5了？
让我们先了解一下批处理运行命令的机制：
批处理读取命令时是按行读取的（另外例如for命令等，其后用一对圆括号闭合的所有语句也当作一行），在处理之前要完成必要的预处理工作，这其中就包括对该行命令中的变量赋值。我们现在分析一下例1，批处理在运行到这句“set a=5 echo %a%”之前，先把这一句整句读取并做了预处理——对变量a赋了值，那么%a%当然就是4了！（没有为什么，批处理就是这样做的。）
而为了能够感知环境变量的动态变化，批处理设计了变量延迟。简单来说，在读取了一条完整的语句之后，不立即对该行的变量赋值，而会在某个单条语句执行之前再进行赋值，也就是说“延迟”了对变量的赋值。
那么如何开启变量延迟呢？变量延迟又需要注意什么呢？举个例子说明一下：</p>
<p>例2:</p>
<p>1
2
3
4
5
@echo off
setlocal enabledelayedexpansion
set a=4
set a=5 echo !a!
pause</p>
<p>结果：5
解说：启动了变量延迟，得到了正确答案。变量延迟的启动语句是“setlocal enabledelayedexpansion”，并且变量要用一对叹号“!!”括起来（注意要用英文的叹号），否则就没有变量延迟的效果。
分析一下例2，首先“setlocal enabledelayedexpansion”开启变量延迟，然后“set a=4”先给变量a赋值为
4，“set a=5 echo !a!”这句是给变量a赋值为5并输出（由于启动了变量延迟，所以批处理能够感知到动态变化，即不是先给该行变量赋值，而是在运行过程中给变量赋值，因此此时a的值就是5了）。
再举一个例子巩固一下。
例3:</p>
<p>1
2
3
4
5
6
7
@echo off
setlocal enabledelayedexpansion
for /l %%i in (1,1,5) do (
set a=%%i
echo !a!
)
pause</p>
<p>结果：</p>
<p>1
2
3
4
5</p>
<p>解说：本例开启了变量延迟并用“!!”将变量扩起来，因此得到我们预期的结果。如果不用变量延迟会出现什
么结果呢？结果是这样的：
ECHO 处于关闭状态。
ECHO 处于关闭状态。
ECHO 处于关闭状态。
E</p>
]]></description>
            <author>sl-wen</author>
            <category>bat</category>
            <pubDate>Fri, 28 Mar 2025 05:41:00 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=d5791554-2c7d-460b-bb2d-18c1c8c4482a</guid>
            <lastBuildDate>Fri, 06 Jun 2025 01:26:31 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[file_list]]></title>
            <link>http://121.40.215.235/pages/article.html?id=efbabc47-885d-4b69-8b3f-18910918475a</link>
            <description><![CDATA[<h3>file_list.bat</h3>
<pre><code class="language-script">@echo off
chcp 65001 &gt;nul
setlocal enabledelayedexpansion
set &quot;outputFile=%~dp0file_list.txt&quot;

:: 输出表头
(
echo 文件名	文件类型	文件大小byte	修改时间
) &gt; &quot;%outputFile%&quot;

:: 遍历当前目录下的所有文件
for /R %%F in (*.*) do (
    set &quot;name=%%F&quot;
    set &quot;type=%%~xF&quot;
    set &quot;size=%%~zF&quot;
    set &quot;time=%%~tF&quot;
    
    :: 格式化输出
    echo !name!	!type!	!size!	!time! &gt;&gt; &quot;%outputFile%&quot;
)

pause
exit
</code></pre>
]]></description>
            <author>sl-wen</author>
            <category>bat</category>
<category>file_list</category>
            <pubDate>Fri, 28 Mar 2025 02:35:16 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=efbabc47-885d-4b69-8b3f-18910918475a</guid>
            <lastBuildDate>Wed, 04 Jun 2025 09:26:37 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[releasetool]]></title>
            <link>http://121.40.215.235/pages/article.html?id=f1726200-b88d-4344-8e29-95da55a3a058</link>
            <description><![CDATA[<pre><code class="language-shell">cp -pr /usr/local/lib/XXXX /usr/local/lib/$1
cd /usr/local/lib/XXXX/
sudo chown -R root:root /usr/local/lib/XXXX
sudo chmod -R 777 /usr/local/lib/XXXX
git fetch --all
git reset --hard origin/$2
git checkout $2
git status
git clean -fd

if [ &quot;$3&quot; == &quot;prd&quot; ] || [ &quot;$3&quot; == &quot;dev&quot; ]; then
    cp -pf Configs/XXXX.php.$3 Configs/XXXX.php
    echo $3&quot;定義ファイル切替完了(&quot;$2&quot;)&quot;
else
    cp -pf /usr/local/lib/$1/XXXX/Configs/XXXX.php Configs/XXXX.php
    echo &quot;バックアップから定義ファイル切替完了(&quot;$2&quot;)&quot;
fi

sudo chown -R apache:apache /usr/local/lib/XXXX
sudo chmod -R 755 /usr/local/lib/XXXX
service httpd start
echo $3&quot;リリース完了しました(&quot;$2&quot;)&quot;
</code></pre>
]]></description>
            <author>sl-wen</author>
            <category>releasetool</category>
<category>release</category>
            <pubDate>Thu, 20 Mar 2025 06:46:29 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=f1726200-b88d-4344-8e29-95da55a3a058</guid>
            <lastBuildDate>Wed, 04 Jun 2025 08:41:38 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[laminas-migration]]></title>
            <link>http://121.40.215.235/pages/article.html?id=5ba1df80-3e15-4f10-aa84-c32d7d170dbe</link>
            <description><![CDATA[<h2>参照</h2>
<pre><code>https://docs.laminas.dev/migration/
</code></pre>
<ul>
<li>Composerを使用していることを確認してください</li>
</ul>
<pre><code>Composerインストールしていない場合
chmod -R 777 /etc/php.ini 
/etc/php.ini allow_url_fopen = Onに修正要
curl -sS https://getcomposer.org/installer | php
sudo mv composer.phar /usr/local/bin/composer
バージョン確認
composer --version
composerバージョン2.2にアップデート
composer self-update --2.2
</code></pre>
<hr>
<ul>
<li>laminas-migrationをインストールする</li>
</ul>
<pre><code>yum install -y unzip
sudo yum install git
composer global require laminas/laminas-migration
＃PATHへの追加
export PATH=&quot;$PATH:/root/.config/composer/vendor/bin&quot;
$ cd /root/.config/composer/vendor/laminas/laminas-migration/bin
＃laminas-migrationを確認
laminas-migration --help
</code></pre>
<hr>
<ul>
<li>移行コマンドを実行する</li>
</ul>
<pre><code>php laminas-migration migrate /usr/local/lib/XXXX
</code></pre>
<hr>
<ul>
<li>composerアップグレード</li>
</ul>
<pre><code>composer update
composer install
composer remove phpunit/dbunit
composer remove phpunit/php-token-stream phpunit/phpunit-mock-objects
</code></pre>
]]></description>
            <author>slwen</author>
            <category>laminas</category>
<category>php</category>
            <pubDate>Thu, 20 Mar 2025 06:43:22 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=5ba1df80-3e15-4f10-aa84-c32d7d170dbe</guid>
            <lastBuildDate>Sun, 01 Jun 2025 03:26:20 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[Linux]]></title>
            <link>http://121.40.215.235/pages/article.html?id=652b63b8-f77d-4657-be41-79152a8b4eee</link>
            <description><![CDATA[<h3>権限付与 root</h3>
<pre><code>sudo su -
</code></pre>
<h3>書込み権限</h3>
<pre><code>chmod -R 777 /opt/
chmod -R 755 /opt/
</code></pre>
<h3>権限付与</h3>
<pre><code>sudo chown -R apache:apache /usr/local/
</code></pre>
<h3>権限view</h3>
<pre><code>ll
</code></pre>
<h3>削除</h3>
<pre><code>rm -rf /usr/local/
</code></pre>
<h3>copy</h3>
<pre><code>cp -pr /usr/local/ /usr/local/lib/
</code></pre>
<h3>rename</h3>
<pre><code>mv /usr/local/lib/a /usr/local/lib/a_20250116
</code></pre>
<h3>view</h3>
<pre><code>cat /usr/local/1.txt
</code></pre>
<h3>view log 200</h3>
<pre><code>tail -200 /var/log/error.log
</code></pre>
<h3>再起動</h3>
<pre><code>service httpd restart
</code></pre>
]]></description>
            <author>Admin</author>
            <category>Linux</category>
<category>command</category>
            <pubDate>Wed, 19 Mar 2025 03:28:40 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=652b63b8-f77d-4657-be41-79152a8b4eee</guid>
            <lastBuildDate>Sun, 01 Jun 2025 03:56:18 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[git]]></title>
            <link>http://121.40.215.235/pages/article.html?id=88456219-d82e-4326-ae41-94952b07162b</link>
            <description><![CDATA[<h1>安装和配置 Git</h1>
<h5>首先，需要在本地计算机上安装 Git。安装完成后，可以通过配置用户名和邮箱来初始化 Git 仓库。</h5>
<ul>
<li><p>git config --global user.name &quot;XXXX&quot;</p>
</li>
<li><p>git config --global user.email &quot;<a href="mailto:XXXX@hogehoge.com">XXXX@hogehoge.com</a>&quot;</p>
</li>
<li><p>在命令行中，可以使用 &quot;git init&quot; 命令来创建一个新的 Git 仓库。在 GUI 工具中，可以使用 &quot;New Repository&quot; 按钮来创建一个新的 Git 仓库。</p>
<blockquote>
<p>git ini</p>
</blockquote>
</li>
<li><p>添加文件：将需要管理的文件添加到 Git 仓库中。在命令行中，可以使用 &quot;git add&quot; 命令来添加文件。在 GUI 工具中，可以使用 &quot;Add&quot; 按钮或拖拽文件到仓库中来添加文件。</p>
<blockquote>
<p>git add</p>
</blockquote>
</li>
<li><p>提交更改：在添加文件之后，需要将更改提交到 Git 仓库中。在 GUI 工具中，可以使用 &quot;Commit&quot; 按钮来提交更改。在 GUI 工具中，可以使用 &quot;New Branch&quot; 按钮来创建分支。</p>
<blockquote>
<p>Commit</p>
</blockquote>
</li>
<li><p>创建分支：使用 &quot;git branch&quot; 命令创建新的分支。如果需要在创建分支的同时切换到新分支，可以使用 &quot;git checkout -b 分支名&quot; 命令。</p>
<blockquote>
<p>git branch</p>
</blockquote>
</li>
<li><p>查看分支：使用 &quot;git branch&quot; 命令可以查看本地分支，使用 &quot;git branch -a&quot; 命令可以查看所有分支（包含远程分支）。</p>
<blockquote>
<p>git branch -a</p>
</blockquote>
</li>
<li><p>切换分支：使用 &quot;git checkout 分支名&quot; 命令切换到指定分支。</p>
<blockquote>
<p>git checkout 分支名</p>
</blockquote>
</li>
<li><p>合并分支：使用 &quot;git merge 分支名&quot; 命令将指定分支合并到当前分支。如果需要将多个分支合并到当前分支，可以使用 &quot;git merge 分支名1 分支名2&quot; 命令。</p>
<blockquote>
<p>git merge 分支名</p>
</blockquote>
</li>
<li><p>删除分支：使用 &quot;git branch -d 分支名&quot; 命令删除本地分支。如果要删除远程分支，可以使用 &quot;git push origin --delete 分支名&quot; 命令。</p>
<blockquote>
<p>git branch -d 分支名</p>
</blockquote>
</li>
<li><p>推送分支：使用 &quot;git push origin 分支名&quot; 命令将本地分支推送到远程仓库。如果需要设置上游跟踪分支，可以使用 &quot;git push --set-upstream origin 分支名&quot; 命令。</p>
<blockquote>
<p>git push origin 分支名</p>
</blockquote>
</li>
<li><p>获取远程分支：使用 &quot;git pull origin 分支名&quot; 命令将远程分支拉取到本地。</p>
<blockquote>
<p>git pull origin 分支名</p>
</blockquote>
</li>
<li><p>如果需要自动合并远程分支，可以使用 &quot;git pull --rebase origin 分支名&quot; 命令。</p>
<blockquote>
<p>git pull --rebase origin 分支名</p>
</blockquote>
</li>
<li><p>提交本地分支到远程分支：使用 &quot;git push origin 分支名&quot; 命令将本地分支提交到远程仓库的相应分支。</p>
<blockquote>
<p>git push origin 分支名</p>
</blockquote>
</li>
<li><p>远程仓库：如果需要在远程存储仓库中存储和管理版本历史，需要配置远程仓库。可以通过 &quot;git remote add origin 仓库链接&quot; 命令添加远程仓库链接，然后使用 &quot;git push&quot; 命令将本地更改推送到远程仓库。</p>
<blockquote>
<p>git remote add origin 仓库链接
git push</p>
</blockquote>
</li>
<li><p>克隆仓库：如果需要从远程仓库克隆代码，可以使用 &quot;git clone&quot; 命令来克隆整个仓库到本地。</p>
<blockquote>
<p>git clone</p>
</blockquote>
</li>
<li><p>commitの打ち消し</p>
<blockquote>
<p>git revert &lt;コミットのハッシュ値&gt;</p>
</blockquote>
</li>
<li><p>コミットメッセージの修正</p>
<blockquote>
<p>git commit --amend &quot;新しいコミットメッセージ&quot;</p>
</blockquote>
</li>
<li><p>pushの取り消し</p>
<blockquote>
<p>git reset --hard &lt;戻したいコミットのハッシュ値&gt;
git push -f</p>
</blockquote>
</li>
</ul>
]]></description>
            <author>slwen</author>
            <category>git</category>
            <pubDate>Tue, 18 Mar 2025 08:25:15 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=88456219-d82e-4326-ae41-94952b07162b</guid>
            <lastBuildDate>Wed, 04 Jun 2025 08:26:28 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[release]]></title>
            <link>http://121.40.215.235/pages/article.html?id=bbf63406-eb88-4a60-b51d-3defcb72def1</link>
            <description><![CDATA[<ul>
<li>git init</li>
<li>git remote add origin <a href="mailto:git@github.com">git@github.com</a>:sl-wen/so-novel.git</li>
<li>git fetch --all</li>
<li>git reset --hard origin/main</li>
<li>git checkout main</li>
<li>gitで管理していないソースがあるかどうかを確認する<ul>
<li>git status</li>
</ul>
</li>
<li>gitで管理していないソースを削除する<ul>
<li>git clean -fd</li>
</ul>
</li>
<li>git log</li>
</ul>
]]></description>
            <author>slwen</author>
            <category>release</category>
            <pubDate>Tue, 18 Mar 2025 08:18:44 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=bbf63406-eb88-4a60-b51d-3defcb72def1</guid>
            <lastBuildDate>Wed, 04 Jun 2025 08:25:26 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[SSH設定]]></title>
            <link>http://121.40.215.235/pages/article.html?id=41559f85-4f2d-4133-9960-410fe42154df</link>
            <description><![CDATA[<p>root権限に変更する</p>
<pre><code>sudo su -
</code></pre>
<p>SSHキーは既に存在するかどうかをチェックする(id_rsaがあるかどうかを確認する)</p>
<pre><code>ls -al ~/.ssh
</code></pre>
<p>既に存在する場合、SSHキーを削除します</p>
<pre><code>rm -rf ~/.ssh/id_rsa
rm -rf ~/.ssh/id_rsa.pub
</code></pre>
<p>対象GitHubアカウントのSSHキーを作成する　（GitHubのアカウント）</p>
<pre><code>ssh-keygen -t rsa -b 4096 -C &quot;sl-wen@outlook.com&quot;
</code></pre>
<p>SSH-Agent起動</p>
<pre><code>eval &quot;$(ssh-agent -s)&quot;
</code></pre>
<p>SSHキーはSSH-Agentに追加する</p>
<pre><code>ssh-add ~/.ssh/id_rsa
</code></pre>
<p>SSHキー内容を確認する</p>
<pre><code>cat ~/.ssh/id_rsa.pub
</code></pre>
<p>SSHキー内容をコピーする
GitHubにSSHキーを設定する</p>
<pre><code>・GitHubのsetting画面にSSHキーを追加する
</code></pre>
<p>接続テスト</p>
<pre><code>ssh -T git@github.com
</code></pre>
]]></description>
            <author>slwen</author>
            <category>SSH</category>
            <pubDate>Tue, 18 Mar 2025 08:14:34 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=41559f85-4f2d-4133-9960-410fe42154df</guid>
            <lastBuildDate>Fri, 06 Jun 2025 01:52:05 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[PHPLibrary]]></title>
            <link>http://121.40.215.235/pages/article.html?id=81132e66-c9a1-4e48-8247-ed8d6ac91169</link>
            <description><![CDATA[<ul>
<li>composer/pcre</li>
<li>composer/semver</li>
<li>composer/xdebug-handler</li>
<li>doctrine/annotations</li>
<li>doctrine/lexer</li>
<li>friendsofphp/php-cs-fixer</li>
<li>ircmaxell/random-lib</li>
<li>ircmaxell/security-lib</li>
<li>laminas/laminas-dependency-plugin</li>
<li>laminas/laminas-xml</li>
<li>psr/cache</li>
<li>psr/container</li>
<li>psr/event-dispatcher</li>
<li>psr/log</li>
<li>sebastian/diff</li>
<li>smarty/smarty</li>
<li>symfony/console</li>
<li>symfony/deprecation-contracts</li>
<li>symfony/event-dispatcher</li>
<li>symfony/event-dispatcher-contracts</li>
<li>symfony/filesystem</li>
<li>symfony/finder</li>
<li>symfony/options-resolver</li>
<li>symfony/polyfill-ctype</li>
<li>symfony/polyfill-intl-grapheme</li>
<li>symfony/polyfill-intl-normalizer</li>
<li>symfony/polyfill-mbstring</li>
<li>symfony/polyfill-php80</li>
<li>symfony/polyfill-php81</li>
<li>symfony/process</li>
<li>symfony/service-contracts</li>
<li>symfony/stopwatch</li>
<li>symfony/string</li>
<li>apache-log4php-2.3.0</li>
<li>fpdi</li>
<li>PHPlot</li>
<li>phpQuery</li>
<li>tcpdf</li>
<li>jquery.mobile-1.1.0</li>
<li>jquery.keypad.package-1.4.1</li>
<li>jquery.keypad.package-1.4.1.zook</li>
<li>jquery.mobile.datebox</li>
<li>iscroll</li>
<li>iDigiClock</li>
<li>excanvas</li>
<li>epiclock</li>
<li>jquery-3.7.1.min.js</li>
<li>jquery-ui.min.js</li>
<li>jquery.bgiframe.min.js</li>
<li>jquery.cookies.min.js</li>
<li>jquery.dateformat.min.js</li>
<li>jquery.dimensions.min.js</li>
<li>jquery.jdMenu.min.js</li>
<li>jquery.positionBy.min.js</li>
<li>jquery.ui.autocomplete.min.js</li>
<li>jquery.ui.ipad.alt.min.js</li>
<li>jquery-ui-i18n.js</li>
</ul>
]]></description>
            <author>slwen</author>
            <category>Library</category>
<category>php</category>
            <pubDate>Tue, 18 Mar 2025 08:07:23 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=81132e66-c9a1-4e48-8247-ed8d6ac91169</guid>
            <lastBuildDate>Thu, 05 Jun 2025 08:25:29 GMT</lastBuildDate>
        </item>

        <item>
            <title><![CDATA[Markdown语法详解]]></title>
            <link>http://121.40.215.235/pages/article.html?id=027ccc92-34a8-423c-93a9-4ae6dae69a5a</link>
            <description><![CDATA[<p>以下为Markdown语法详解，结构清晰，涵盖常用语法及扩展功能：</p>
<hr>
<h3>标题</h3>
<p>井号标记：用 # 数量表示标题级别（H1-H6）</p>
<pre><code># H1标题
</code></pre>
<p>效果:</p>
<h1>H1标题</h1>
<pre><code>## H2标题
</code></pre>
<p>效果:</p>
<h2>H2标题</h2>
<pre><code>### H3标题
</code></pre>
<p>效果:</p>
<h3>H3标题</h3>
<hr>
<p>底线标记：用 ===（H1）或 ---（H2）</p>
<pre><code>H1标题
===
H2标题
---
</code></pre>
<h1>效果:
H1标题</h1>
<h2>H2标题</h2>
<hr>
<h3>段落与换行</h3>
<p>段落：段落间用空行分隔。
换行：行尾加 两个空格 或使用 <code>&lt;br&gt;</code> 标签。</p>
<pre><code>段落间用空行分隔

段落间用\&lt;br&gt;分隔&lt;br&gt;
段落
</code></pre>
<p>效果:
段落间用空行分隔</p>
<p>段落间用&lt;br&gt;分隔<br>
段落</p>
<hr>
<h3>列表</h3>
<p>无序列表：用 *、+ 或 - 加空格</p>
<pre><code>* 项目1
- 项目2
  + 子项目（缩进2或4空格）
</code></pre>
<p>效果:</p>
<ul>
<li>项目1</li>
</ul>
<ul>
<li>项目2<ul>
<li>子项目（缩进2或4空格）</li>
</ul>
</li>
</ul>
<hr>
<h3>有序列表</h3>
<p>数字 + . 加空格</p>
<pre><code>1. 第一项
2. 第二项
</code></pre>
<p>效果:</p>
<ol>
<li>第一项</li>
<li>第二项</li>
</ol>
<hr>
<p>引用
单层引用：&gt; 引用内容
嵌套引用：逐层添加 &gt;</p>
<pre><code>&gt; 一级引用
&gt;&gt; 二级引用
</code></pre>
<p>效果:</p>
<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
</blockquote>
</blockquote>
<hr>
<h3>代码</h3>
<p>行内代码：用反引号包裹 <code>code</code></p>
<pre><code>`code`
</code></pre>
<p>效果: <code>code</code></p>
<hr>
<h3>代码块</h3>
<p>用三个反引号包围，可指定语言
```python
print(&quot;Hello World&quot;)
```
效果:</p>
<pre><code class="language-python">print(&quot;Hello World&quot;)
</code></pre>
<hr>
<h3>链接与图片</h3>
<p>行内链接：<a href="URL" title="标题">显示文本</a>（标题可选）</p>
<pre><code>[显示文本](URL &quot;标题&quot;)（标题可选）
</code></pre>
<p>效果:
<a href="URL" title="标题">显示文本</a></p>
<h3>参考式链接：定义链接ID</h3>
<pre><code>[GitHub][1]
[1]: https://github.com
</code></pre>
<p>[GitHub][1]
[1]: <a href="https://github.com">https://github.com</a></p>
<pre><code>![替代文本](图片URL &quot;标题&quot;)
</code></pre>
<p>效果:
<img src="%E5%9B%BE%E7%89%87URL" alt="替代文本" title="标题"></p>
<hr>
<h3>强调与删除线</h3>
<p>斜体</p>
<pre><code>*文本* 或 _文本_
</code></pre>
<p>效果:
<em>文本</em> 或 <em>文本</em></p>
<p>粗体：</p>
<pre><code>**文本** 或 __文本__
</code></pre>
<p>效果:
<strong>文本</strong> 或 <strong>文本</strong></p>
<p>删除线：</p>
<pre><code>~~文本~~（部分扩展支持）
</code></pre>
<p>效果:
<del>文本</del>（部分扩展支持）</p>
<hr>
<p>分隔线
用三个及以上 ***、--- 或 ___，需空行分隔：</p>
<pre><code>***
---
___
</code></pre>
<hr>
<hr>
<hr>
<h3>表格</h3>
<p>竖线 | 分隔列，--- 分隔表头，: 控制对齐：</p>
<pre><code>| 左对齐 |   居中   | 右对齐 |
|:--|:--:|--:|
| 内容  |  内容   |  100 |
</code></pre>
<p>效果:</p>
<table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="center">居中</th>
<th align="right">右对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">内容</td>
<td align="center">内容</td>
<td align="right">100</td>
</tr>
</tbody></table>
<hr>
<h3>扩展功能</h3>
<p>任务列表（GitHub Flavored Markdown）：</p>
<pre><code>- [ ] 未完成
- [x] 已完成
</code></pre>
<p>效果:</p>
<ul>
<li><input disabled="" type="checkbox"> 未完成</li>
<li><input checked="" disabled="" type="checkbox"> 已完成</li>
</ul>
<hr>
<h3>脚注</h3>
<pre><code>正文[^1]
[^1]: 脚注内容
</code></pre>
<p>效果:
正文[^1]
[^1]: 脚注内容</p>
<hr>
<h3>自动链接</h3>
<p><code>&lt;https://example.com&gt;</code>
效果: <a href="https://example.com">https://example.com</a></p>
<hr>
<h3>转义字符</h3>
<p>用反斜杠 \ 转义特殊字符，如 *、#。</p>
<hr>
<h3>注意事项</h3>
<ul>
<li>符号后需加空格（如 # 标题、* 列表项）。</li>
<li>分隔符前后空行，避免误识别为标题。</li>
<li>兼容性：表格、任务列表为扩展语法，部分平台可能不支持。</li>
</ul>
<hr>
<p>掌握以上语法即可高效编写结构清晰的Markdown文档，适应多数平台如GitHub、Typora等。</p>
]]></description>
            <author>sl-wen</author>
            <category>markdown</category>
            <pubDate>Fri, 08 Mar 2024 00:00:00 GMT</pubDate>
            <guid isPermaLink="false">http://121.40.215.235/pages/article.html?id=027ccc92-34a8-423c-93a9-4ae6dae69a5a</guid>
            <lastBuildDate>Fri, 06 Jun 2025 02:39:22 GMT</lastBuildDate>
        </item>
                        </channel>
                     </rss>