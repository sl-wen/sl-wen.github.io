# 服务器端Git拉取并构建部署工作流
name: Deploy to ALI

on:
  # 在react分支有推送时触发
  push:
    branches: ["react"]
  # 允许手动触发部署
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 通过SSH连接服务器，拉取代码并构建
      - name: Deploy via Git Pull on Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_KEY }}
          port: 22
          script: |
            cd /var/www/blog
            
            echo "=== 开始服务器端Git部署 ==="
            
            # 检查Node.js版本
            node --version
            npm --version
            
            # 停止现有服务
            echo "🛑 停止现有服务..."
            systemctl stop blog || echo "服务未运行"
            pkill -f "next start" || echo "没有运行中的Next.js进程"
            
            # 备份当前版本（如果需要回滚）
            echo "💾 备份当前版本..."
            if [ -d ".next" ]; then
                rm -rf .next.backup
                mv .next .next.backup
            fi
            
            # 拉取最新代码
            echo "📥 拉取最新代码..."
            git fetch origin
            git reset --hard origin/react
            git clean -fd
            
            # 显示当前版本信息
            echo "📋 当前版本信息:"
            git log --oneline -n 3
            
            # 创建环境变量文件
            echo "🔧 配置环境变量..."
            cat > .env.local << EOF
            NEXT_PUBLIC_SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_KEY }}
            EOF
            
            # 清理旧的构建文件
            echo "🧹 清理旧文件..."
            rm -rf node_modules
            npm cache clean --force
            
            # 安装依赖
            echo "📦 安装依赖..."
            npm ci --production=false
            
            # 构建应用
            echo "🔨 构建应用..."
            npm run build
            
            # 安装生产依赖
            echo "📦 安装生产依赖..."
            npm ci --production --ignore-scripts
            
            # 设置权限
            echo "🔐 设置权限..."
            chown -R root:root /var/www/blog
            chmod -R 755 /var/www/blog
            
            # 启动服务
            echo "🚀 启动服务..."
            systemctl start blog
            systemctl enable blog
            
            # 等待服务启动
            echo "⏳ 等待服务启动..."
            sleep 10
            
            # 检查服务状态
            echo "🔍 检查服务状态..."
            if systemctl is-active --quiet blog; then
                echo "✅ 服务启动成功"
                
                # 检查应用是否响应
                if curl -f http://localhost:3000 > /dev/null 2>&1; then
                    echo "✅ 应用响应正常"
                    
                    # 清理备份文件
                    rm -rf .next.backup
                    
                    echo "🎉 部署成功完成！"
                else
                    echo "❌ 应用无响应，尝试回滚..."
                    systemctl stop blog
                    
                    # 回滚到备份版本
                    if [ -d ".next.backup" ]; then
                        rm -rf .next
                        mv .next.backup .next
                        systemctl start blog
                        echo "🔄 已回滚到上一个版本"
                    fi
                    
                    systemctl status blog
                    exit 1
                fi
            else
                echo "❌ 服务启动失败，尝试回滚..."
                
                # 回滚到备份版本
                if [ -d ".next.backup" ]; then
                    rm -rf .next
                    mv .next.backup .next
                    systemctl start blog
                    echo "🔄 已回滚到上一个版本"
                fi
                
                systemctl status blog
                journalctl -u blog --no-pager -n 20
                exit 1
            fi
            
            echo "=== 部署完成 ==="
            echo "📊 服务状态: $(systemctl is-active blog)"
            echo "🔗 访问地址: http://182.92.240.153"

      # 部署后通知
      - name: Deployment Status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ 部署成功！网站已更新到: http://182.92.240.153"
            echo "🔗 访问地址: http://182.92.240.153"
          else
            echo "❌ 部署失败，请检查日志获取详细信息。"
            echo "💡 提示: 如果部署失败，系统会自动尝试回滚到上一个版本"
          fi
